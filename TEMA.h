#pragma once
/*
короче, есть класс кнопка.
в игре пока три сцены - таверна,сражение, меню.
надо класс таверны (фиксированное количетсво кнопок, картинка и случайно количество экипажа и т.п.)
класс сражения (пикча, нагенеренное количество фриков врага и кнопки)
класс меню (кнопки, пикча, музыка)
так же надо класс игрока, у игрока есть экипаж, инвентарь и деньги.
в экипаже состоят неписи, надо структуру непися (хп,урон и т.п.)
как это вижу в цикле - куррент левел == таверна, значит выводим пикчу таверны, денег игрока и генерируем список болванчиков для найма.
кнопка "в бой" нажата -> выводим поля сражения, нажата кнопка "файт" - болванчики "сражаются", победа- начисляем лаве в инвентарь и переводим в таверну,
проигрыш - выводим пикчу the end и откидываем в меню
*/
// меню(новая игра) -> таверна -> приключение -> таверна.... всё это один класс
/*
примитивы:
класс издатель_кнопок (даёт события): вектор указателей на кнопки, метод дать событие(координаты кнопки, код сообщения){}, метод подписать кнопку
метод удалить кнопку.
класс спрайт (фанта): текстура, координаты, рендер, замена текстуры, координат,в конструкторе инициализация.
класс текст: строка, шрифт, поверхность -> текстура, размер,цвет, рендер, координаты, изменение этого всего, в конструкторе инициализация
класс кнопка: текст, спрайт, метод получения события (канал будет вызывать этот метод через указатель с сообщением, сообщение расшифровывается
и принимаются какие-то действия). 

*/
// не забыть про std::<unique_ptr> и std::<shared_ptr>
/*
УХ ТЫЖ БЛЯ, КОРОЧЕ УКАЗАТЕЛЬ НЕЗАВИСИМ ОТ КЛАССА. КЛАСС ХРАНИТЬСЯ КАК ТЫ ЕГО ОПРЕДЕЛИЛ, ИМЯ УКАЗАТЕЛЯ ХРАНИТСЯ ТАМ ЖЕ, ГДЕ И КЛАСС.
А ВОТ УКАЗАТЕЛЬ УЖЕ УКАЗЫВАЕТ ТУДА, ГДЕ ОН ХОЧЕТ, И ЕМУ  ДО ПИЗДЫ, ГДЕ ЛЕЖИТ ИМЯ УКАЗАТЕЛЯ И КЛАСС.
*/